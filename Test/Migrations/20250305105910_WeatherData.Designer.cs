// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.DataBas_MSSQL.Context;

#nullable disable

namespace Test.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250305105910_WeatherData")]
    partial class WeatherData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test.Models.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AtmosphericPressure")
                        .HasColumnType("float")
                        .HasColumnName("AtmosphericPressure");

                    b.Property<int?>("CloudHeight")
                        .HasColumnType("int")
                        .HasColumnName("h");

                    b.Property<int?>("Cloudiness")
                        .HasColumnType("int")
                        .HasColumnName("Cloudiness");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DewPoint")
                        .HasColumnType("float")
                        .HasColumnName("Td");

                    b.Property<int?>("RelativeHumidity")
                        .HasColumnType("int")
                        .HasColumnName("RelativeHumidity");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float")
                        .HasColumnName("T");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.Property<double?>("Visibility")
                        .HasColumnType("float")
                        .HasColumnName("VV");

                    b.Property<string>("WeatherPhenomena")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("WeatherPhenomena");

                    b.Property<string>("WindDirection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WindDirection");

                    b.Property<double?>("WindSpeed")
                        .HasColumnType("float")
                        .HasColumnName("WindSpeed");

                    b.HasKey("Id");

                    b.ToTable("WeatherData");
                });
#pragma warning restore 612, 618
        }
    }
}
